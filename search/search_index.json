{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Design & Code Snippets We will be covering the following topics Design Patterns Algorithms Python Swift Machine Learning","title":"Home"},{"location":"#design-code-snippets","text":"We will be covering the following topics Design Patterns Algorithms Python Swift Machine Learning","title":"Design &amp; Code Snippets"},{"location":"datastructures/","text":"Data Structures Stack Stack Swift Implementation","title":"Data Structures"},{"location":"datastructures/#data-structures","text":"Stack Stack Swift Implementation","title":"Data Structures"},{"location":"Swift/Swift/","text":"Cocoa / Swift User Interface Elements NSTableView NSOutlineView NSCollectionView Swift CALayer .","title":"Cocoa/Swift"},{"location":"Swift/Swift/#cocoa-swift","text":"","title":"Cocoa / Swift"},{"location":"Swift/Swift/#user-interface-elements","text":"NSTableView NSOutlineView NSCollectionView Swift CALayer .","title":"User Interface Elements"},{"location":"Swift/Swift_CALayer/","text":"CALayers in Swift","title":"CALayers in Swift"},{"location":"Swift/Swift_CALayer/#calayers-in-swift","text":"","title":"CALayers in Swift"},{"location":"datastructure/Stack/","text":"Stack is one of the simplest data structures. Stack has LIFO - Last In first out order Stack is like an array but with limited functionality Push to add a new object to the top Pop to remove the last object top to look at the top most/last element without removing it import Cocoa //Here the stack is created as a wrapper around a swift array that allows push an object to the stack, //pop the last object and look at the top element of the stack public struct Stack < T > { fileprivate var array = [ T ]() public var isEmpty : Bool { return array . isEmpty } public var count : Int { return array . count } public mutating func push ( _ element : T ){ array . append ( element ) } public mutating func pop () -> T ?{ return array . popLast () } public var top : T ? { return array . last } }","title":"Stack"}]}